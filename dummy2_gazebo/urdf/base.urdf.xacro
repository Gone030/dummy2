<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="test1">

    <xacro:property name="base_width" value="0.40"/>
    <xacro:property name="base_length" value="0.70"/>
    <xacro:property name="base_height" value="0.20"/>

    <xacro:property name="wheel_radius" value="0.14"/>
    <xacro:property name="wheel_width" value="0.06"/>

    <xacro:property name="wheel_ygap" value="0.035"/>

    <xacro:property name="wheel_xoff" value="0.305"/>
    <xacro:property name="wheel_zoff" value="0.06"/>

    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12)*(h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12)*(w*w + d*d)}" iyz="0.0" izz="${(m/12)*(w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="wheel_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0.0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 -0.05" rpy="0 0 0"/>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>

        <xacro:box_inertia m="15.0" w="${base_width}" d="${base_length}" h="${base_height}"/>
    </link>

    <link name="base_footprint">
        <xacro:box_inertia m="0" w="0" h="0" d="0"/>
    </link>

    <joint name="base_joint" type="fixed">
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="base_footprint"/>
    </joint>

    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </visual>

        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>

        <xacro:wheel_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <axis xyz="0.0 1.0 0.0"/>
    </joint>
    </xacro:macro>
    <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1"/>
    <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1"/>
    <link name="front_left_wheel_steer">
      <visual>
        <geometry>
          <cylinder length="0.01" radius="0.01"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.01" radius="0.01"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.1"/>
        <inertia ixx="5.1458e-5" iyy="5.1458e-5" izz="6.125e-5"
                ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>
    <link name="front_left_wheel">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:wheel_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <!-- <link name="front_left_wheel_shock">
        <visual>
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.05" radius="0.01"/>
        </geometry>
        <material name="silver">
          <color rgba="0.75 0.75 0.75 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.05" radius="0.01"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.01"/>
        <inertia ixx="0.015" iyy="0.0375" izz="0.0375"
                ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link> -->

    <!-- <joint name="front_left_shock_joint" type="prismatic">
      <limit lower="0" upper="0.09" effort="100" velocity="100"/>
      <axis xyz="0 0 1"/>
      <parent link="base_link"/>
      <child link="front_left_wheel_shock"/>
      <origin rpy="0 0 0" xyz="${wheel_xoff} ${(base_width/2+wheel_ygap)} ${-(wheel_zoff)}"/>
    </joint> -->

    <joint name="front_left_wheel_steer_joint" type="revolute">
      <limit lower="-1" upper="1" effort="1" velocity="5"/>
      <axis xyz="0 0 1"/>
      <parent link="base_link"/>
      <child link="front_left_wheel_steer"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <joint name="front_left_wheel_joint" type="continuous">
      <axis xyz="0 0 1"/>
      <parent link="front_left_wheel_steer"/>
      <child link="front_left_wheel"/>
      <origin rpy="${-pi/2} 0 0" xyz="${wheel_xoff} ${(base_width/2+wheel_ygap)} ${-1*(wheel_zoff)}"/>
    </joint>

    <link name="front_right_wheel_steer">
      <visual>
        <geometry>
          <cylinder length="0.01" radius="0.01"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.01" radius="0.01"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.1"/>
        <inertia ixx="5.1458e-5" iyy="5.1458e-5" izz="6.125e-5"
                ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>

    <link name="front_right_wheel">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:wheel_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <!-- <link name="front_right_wheel_shock">
      <visual>
      <origin xyz="0 0 0.1" rpt="0 0 0"/>
      <geometry>
        <cylinder radius="0.01" length="0.05"/>
      </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.05" radius="0.01"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.01"/>
        <inertia ixx="0.015" iyy="0.0375" izz="0.0375"
                ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>

    <joint name="front_right_shock_joint" type="prismatic">
      <limit lower="0.0" upper="0.09" effort="100" velocity="100"/>
      <axis xyz="0.0 0.0 1.0"/>
      <parent link="base_link"/>
      <child link="front_right_wheel_shock"/>
      <origin rpy="0 0 0" xyz="${wheel_xoff} ${-(base_width/2+wheel_ygap)} ${-(wheel_zoff)}"/>
    </joint> -->

    <joint name="front_right_wheel_steer_joint" type="revolute">
      <limit lower="-1" upper="1" effort="1" velocity="5"/>
      <axis xyz="0.0 0.0 1.0"/>
      <parent link="base_link"/>
      <child link="front_right_wheel_steer"/>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>

    <joint name="front_right_wheel_joint" type="continuous">
      <axis xyz="1.0 0.0 1.0"/>
      <parent link="front_right_wheel_steer"/>
      <child link="front_right_wheel"/>
      <origin rpy="${-pi/2} 0.0 0.0" xyz="${wheel_xoff} ${-1*(base_width/2+wheel_ygap)} ${-1*(wheel_zoff)}"/>
    </joint>

    <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01"/>
  </joint>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="twr_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <orientation>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-3</stddev>
            </noise>
          </z>
        </orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="two_wheeled_robot_imu" filename="libgazebo_ros_imu_sensor.so">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>imu_link</frame_name>
        <ros>
          <namespace>/imu</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
</gazebo>

 <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="2.0"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.108" length="0.22"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.108" length="0.22"/>
      </geometry>
    </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.215 0.0 0.150" rpy="0 0 0"/>
  </joint>

  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>3 0.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>419</samples>
            <resolution>0.86</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>15.0</max>
          <resolution>0.86</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo>
    <plugin name="ackermann_gazebo_plugin" filename="libackermann_gazebo_plugin.so">
    </plugin>
  </gazebo>
</robot>
